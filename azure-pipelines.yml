# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- release/*

variables:
  prefix: "$(Build.SourceBranchName)"
  archiveName: 'FunctionsArchive'

pool:
  vmImage: 'ubuntu-latest'
  demands:
    - 'node'
    - 'npm'

stages:
  - stage: Build
    jobs:
      - job: 
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '12.x'
        - bash: |
            echo "pwd: $(pwd)"
            echo "Agent.HomeDirectory: ${AGENT_HOMEDIRECTORY}"
            echo "Agent.BuildDirectory: ${AGENT_BUILDDIRECTORY}"
            echo "Build.SourcesDirectory: ${BUILD_SOURCESDIRECTORY}"
            echo "Build.ArtifactStagingDirectory: ${BUILD_ARTIFACTSTAGINGDIRECTORY}"
            echo "Build.StagingDirectory: ${BUILD_STAGINGDIRECTORY}"
            echo "Build.BinariesDirectory: ${BUILD_BINARIESDIRECTORY}"
            echo "System.DefaultWorkingDirectory: ${SYSTEM_DEFAULTWORKINGDIRECTORY}"
            echo "Pipeline.Workspace: ${PIPELINE_WORKSPACE}"
            node -v
            npm -v
          displayName: Debug
        - bash: |
            npm install
            npm run build --if-present
            npm prune --production
        - task: CopyFiles@2
          inputs:
            SourceFolder: "$(Build.SourcesDirectory)"
            Contents: |
              host.json
              package.json
              **/node_modules/**
              **/**/function.json
              **/**/index.js
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: "$(Build.ArtifactStagingDirectory)"
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.BinariesDirectory)/$(Build.BuildId).zip'
            replaceExistingArchive: true
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.BinariesDirectory)/$(Build.BuildId).zip'
            ArtifactName: '$(archiveName)'

  - stage: Deploy
    dependsOn:
      - Build
    jobs:
      - job: 
        steps:
          - bash: |
              echo "pwd: $(pwd)"
              echo "Agent.HomeDirectory: ${AGENT_HOMEDIRECTORY}"
              echo "Agent.BuildDirectory: ${AGENT_BUILDDIRECTORY}"
              echo "Build.SourcesDirectory: ${BUILD_SOURCESDIRECTORY}"
              echo "Build.ArtifactStagingDirectory: ${BUILD_ARTIFACTSTAGINGDIRECTORY}"
              echo "Build.StagingDirectory: ${BUILD_STAGINGDIRECTORY}"
              echo "Build.BinariesDirectory: ${BUILD_BINARIESDIRECTORY}"
              echo "System.DefaultWorkingDirectory: ${SYSTEM_DEFAULTWORKINGDIRECTORY}"
              echo "Pipeline.Workspace: ${PIPELINE_WORKSPACE}"
              node -v
              npm -v  
            displayName: Debug
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifact: '$(archiveName)'
              path: '$(Build.BinariesDirectory)/$(Build.BuildId).zip'
          - task: AzureFunctionApp@1
            inputs:
              azureSubscription: 'sasatake-azure-service-connection'
              appType: 'functionApp'
              appName: '$(prefix)-functions'
              package: '$(Build.BinariesDirectory)/$(Build.BuildId).zip'
              deploymentMethod: 'zipDeploy'


        